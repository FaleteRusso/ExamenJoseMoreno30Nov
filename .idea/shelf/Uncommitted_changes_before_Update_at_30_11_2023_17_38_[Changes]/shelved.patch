Index: src/com/corenetworks/presentacion/Ej4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej4 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej4.java b/src/com/corenetworks/presentacion/Ej4.java
--- a/src/com/corenetworks/presentacion/Ej4.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej4.java	(date 1701360196414)
@@ -1,2 +1,31 @@
-package com.corenetworks.presentacion;public class Ej4 {
+package com.corenetworks.presentacion;
+
+public class Ej4 {
+    public static void main(String[] args) {
+        //Declarar un array de 5 numeros
+        //poner los valores desde codigo
+        //obtener el numero mas peque침o
+        //2 seleccionar el numero mayor
+
+        int[] num ={-2,4,45,-7,3,-2,8,-31,5,8,23,-6,-19,23,45,7,12,-12};
+
+        int valorMasPequeno = num[0];
+        for (int i=0;i< num.length;i++) {
+            if (num[i] < valorMasPequeno) {
+                valorMasPequeno = num[i];
+            }
+        }
+        System.out.println("El valor m치s peque침o es: " + valorMasPequeno);
+
+        int valorMasAlto = num[0];
+        for (int i = 0; i < num.length; i++) {
+            if (num[i] > valorMasAlto) {
+                valorMasAlto = num[i];
+            }
+        }
+        System.out.println("El valor m치s alto es: " + valorMasAlto);
+
+    }
 }
+
+
Index: src/com/corenetworks/presentacion/PruebaEj7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej7 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/PruebaEj7.java b/src/com/corenetworks/presentacion/PruebaEj7.java
--- a/src/com/corenetworks/presentacion/PruebaEj7.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/PruebaEj7.java	(date 1701362195492)
@@ -1,2 +1,15 @@
-package com.corenetworks.presentacion;public class Ej7 {
+package com.corenetworks.presentacion;
+
+import com.corenetworks.modelo.DadoEj7;
+
+import java.util.Random;
+
+public class PruebaEj7 {
+    public static void main(String[] args) {
+        int aleatorio = new Random().nextInt(1,6);
+        System.out.println("el dado a sacado: " + aleatorio);
+
+
+
+    }
 }
Index: src/com/corenetworks/modelo/DadoEj7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.modelo;\r\n\r\nimport java.security.PublicKey;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class Ej7 {\r\n    private Random aleatorio;\r\n\r\n\r\n\r\n    public String dibujaUno\r\n    public String dibujaDos;\r\n    public String dibujarTres;\r\n    public String dibujjarCuatro;\r\n    public String dibujarcinco;\r\n    public String dibujarSeis;\r\n    public String lanzarDado;\r\n\r\n\r\n    public Ej7() {\r\n    }\r\n\r\n    public Ej7(Random aleatorio, String dibujaUno, String dibujaDos, String dibujarTres, String dibujjarCuatro, String dibujarcinco, String dibujarSeis, String lanzarDado) {\r\n        this.aleatorio = aleatorio;\r\n        this.dibujaUno = dibujaUno;\r\n        this.dibujaDos = dibujaDos;\r\n        this.dibujarTres = dibujarTres;\r\n        this.dibujjarCuatro = dibujjarCuatro;\r\n        this.dibujarcinco = dibujarcinco;\r\n        this.dibujarSeis = dibujarSeis;\r\n        this.lanzarDado = lanzarDado;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        Ej7 ej7 = (Ej7) o;\r\n        return Objects.equals(aleatorio, ej7.aleatorio) && Objects.equals(dibujaUno, ej7.dibujaUno) && Objects.equals(dibujaDos, ej7.dibujaDos) && Objects.equals(dibujarTres, ej7.dibujarTres) && Objects.equals(dibujjarCuatro, ej7.dibujjarCuatro) && Objects.equals(dibujarcinco, ej7.dibujarcinco) && Objects.equals(dibujarSeis, ej7.dibujarSeis) && Objects.equals(lanzarDado, ej7.lanzarDado);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(aleatorio, dibujaUno, dibujaDos, dibujarTres, dibujjarCuatro, dibujarcinco, dibujarSeis, lanzarDado);\r\n    }\r\n\r\n    public Random getAleatorio() {\r\n        return aleatorio;\r\n    }\r\n\r\n    public void setAleatorio(Random aleatorio) {\r\n        this.aleatorio = aleatorio;\r\n    }\r\n\r\n    public String getDibujaUno() {\r\n        return dibujaUno;\r\n    }\r\n\r\n    public void setDibujaUno(String dibujaUno) {\r\n        this.dibujaUno = dibujaUno;\r\n    }\r\n\r\n    public String getDibujaDos() {\r\n        return dibujaDos;\r\n    }\r\n\r\n    public void setDibujaDos(String dibujaDos) {\r\n        this.dibujaDos = dibujaDos;\r\n    }\r\n\r\n    public String getDibujarTres() {\r\n        return dibujarTres;\r\n    }\r\n\r\n    public void setDibujarTres(String dibujarTres) {\r\n        this.dibujarTres = dibujarTres;\r\n    }\r\n\r\n    public String getDibujjarCuatro() {\r\n        return dibujjarCuatro;\r\n    }\r\n\r\n    public void setDibujjarCuatro(String dibujjarCuatro) {\r\n        this.dibujjarCuatro = dibujjarCuatro;\r\n    }\r\n\r\n    public String getDibujarcinco() {\r\n        return dibujarcinco;\r\n    }\r\n\r\n    public void setDibujarcinco(String dibujarcinco) {\r\n        this.dibujarcinco = dibujarcinco;\r\n    }\r\n\r\n    public String getDibujarSeis() {\r\n        return dibujarSeis;\r\n    }\r\n\r\n    public void setDibujarSeis(String dibujarSeis) {\r\n        this.dibujarSeis = dibujarSeis;\r\n    }\r\n\r\n    public String getLanzarDado() {\r\n        return lanzarDado;\r\n    }\r\n\r\n    public void setLanzarDado(String lanzarDado) {\r\n        this.lanzarDado = lanzarDado;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/modelo/DadoEj7.java b/src/com/corenetworks/modelo/DadoEj7.java
--- a/src/com/corenetworks/modelo/DadoEj7.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/modelo/DadoEj7.java	(date 1701362078400)
@@ -1,15 +1,12 @@
 package com.corenetworks.modelo;
 
-import java.security.PublicKey;
 import java.util.Objects;
 import java.util.Random;
 
-public class Ej7 {
+public class DadoEj7 {
     private Random aleatorio;
 
-
-
-    public String dibujaUno
+    public String dibujaUno;
     public String dibujaDos;
     public String dibujarTres;
     public String dibujjarCuatro;
@@ -18,10 +15,10 @@
     public String lanzarDado;
 
 
-    public Ej7() {
+    public DadoEj7(int i, String number, String id, String dibujarTres, String dibujjarCuatro, String dibujarcinco, String dibujarSeis, String yes) {
     }
 
-    public Ej7(Random aleatorio, String dibujaUno, String dibujaDos, String dibujarTres, String dibujjarCuatro, String dibujarcinco, String dibujarSeis, String lanzarDado) {
+    public DadoEj7(Random aleatorio, String dibujaUno, String dibujaDos, String dibujarTres, String dibujjarCuatro, String dibujarcinco, String dibujarSeis, String lanzarDado) {
         this.aleatorio = aleatorio;
         this.dibujaUno = dibujaUno;
         this.dibujaDos = dibujaDos;
@@ -36,7 +33,7 @@
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
-        Ej7 ej7 = (Ej7) o;
+        DadoEj7 ej7 = (DadoEj7) o;
         return Objects.equals(aleatorio, ej7.aleatorio) && Objects.equals(dibujaUno, ej7.dibujaUno) && Objects.equals(dibujaDos, ej7.dibujaDos) && Objects.equals(dibujarTres, ej7.dibujarTres) && Objects.equals(dibujjarCuatro, ej7.dibujjarCuatro) && Objects.equals(dibujarcinco, ej7.dibujarcinco) && Objects.equals(dibujarSeis, ej7.dibujarSeis) && Objects.equals(lanzarDado, ej7.lanzarDado);
     }
 
Index: src/com/corenetworks/presentacion/Ej1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej1 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej1.java b/src/com/corenetworks/presentacion/Ej1.java
--- a/src/com/corenetworks/presentacion/Ej1.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej1.java	(date 1701355747249)
@@ -1,2 +1,10 @@
-package com.corenetworks.presentacion;public class Ej1 {
+package com.corenetworks.presentacion;
+
+public class Ej1 {
+    public static void main(String[] args) {
+        short elementos =10;
+        float promedio = 8.99F;
+        boolean exixte = false;
+        String producto = "Lapiz";
+    }
 }
Index: src/com/corenetworks/presentacion/Ej2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej2 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej2.java b/src/com/corenetworks/presentacion/Ej2.java
--- a/src/com/corenetworks/presentacion/Ej2.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej2.java	(date 1701355769202)
@@ -1,2 +1,14 @@
-package com.corenetworks.presentacion;public class Ej2 {
+package com.corenetworks.presentacion;
+
+public class Ej2 {
+    public static void main(String[] args) {
+        int num = 0;
+        if (num>0){
+            System.out.println("Positivo");
+        } else if (num<0) {
+            System.out.println("Negativo");
+        } else if (num==0) {
+            System.out.println("el numero es igual a 0");
+        }
+    }
 }
Index: src/com/corenetworks/presentacion/Ej3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej3 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej3.java b/src/com/corenetworks/presentacion/Ej3.java
--- a/src/com/corenetworks/presentacion/Ej3.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej3.java	(date 1701357462596)
@@ -1,2 +1,41 @@
-package com.corenetworks.presentacion;public class Ej3 {
+package com.corenetworks.presentacion;
+
+import java.util.Scanner;
+
+public class Ej3 {public static void main(String[] args) {
+    Scanner notaExamen = new Scanner(System.in);
+    System.out.println("Escriba un n칰mero de 1 a 8");
+    int descripcion = 0;
+  descripcion = notaExamen.nextInt();
+    switch (descripcion){
+        case 1:
+            System.out.println("Para microcoche");
+            break;
+        case 2:
+            System.out.println("Para autom칩viles compactos");
+            break;
+        case 3:
+            System.out.println("Para autom칩viles ultracompactos");
+            break;
+        case 4:
+            System.out.println("Para autom칩vil familiar");
+            break;
+        case 5:
+            System.out.println("Para veh칤culo de lujo");
+            break;
+        case 6:
+            System.out.println("Autom칩vil deportivo");
+            break;
+        case 7:
+            System.out.println("Descapotable");
+            break;
+        case 8:
+            System.out.println("Todoterreno");
+            break;
+            default:
+            System.out.println("el numero introducido no esta en la escala de 0 a 8");
+            notaExamen.close();
+    }
+
+}
 }
Index: src/com/corenetworks/presentacion/Ej5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej5 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej5.java b/src/com/corenetworks/presentacion/Ej5.java
--- a/src/com/corenetworks/presentacion/Ej5.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej5.java	(date 1701356572970)
@@ -1,2 +1,26 @@
-package com.corenetworks.presentacion;public class Ej5 {
+package com.corenetworks.presentacion;
+
+public class Ej5 {
+    public static void main(String[] args) {
+        String ora="nunca mates a una mosca sobre la cabeza de un tigre";
+        String mayus = ora.toUpperCase();
+        System.out.println(mayus);
+        String  minus =ora.toLowerCase();
+        System.out.println(minus);
+        int posicionInicio = ora.indexOf("sobre");
+        if (posicionInicio != -1) {
+            int posicionFin = posicionInicio + "sobre".length();
+            String primeraPalabra = ora.substring(posicionInicio, posicionFin);
+            System.out.println("Palabra solicitada: " + primeraPalabra);
+        }
+        int posicion = ora.indexOf('m');
+
+        if (posicion != -1) {
+            System.out.println("'m' est치 en la posici칩n: " + posicion);
+        }
+        int numeroCaracteres = ora.length();
+        System.out.println("N칰mero de caracteres: " + numeroCaracteres);
+
+
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1d499dc7-8bdf-4092-adff-c159b189c5af\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 3\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2YtqrSeklWM7RAmyBGdOonMKU8A\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1d499dc7-8bdf-4092-adff-c159b189c5af\" name=\"Changes\" comment=\"\" />\r\n      <created>1701355425993</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1701355425993</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/.idea/workspace.xml	(date 1701361864675)
@@ -1,12 +1,38 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="1d499dc7-8bdf-4092-adff-c159b189c5af" name="Changes" comment="" />
+    <list default="true" id="1d499dc7-8bdf-4092-adff-c159b189c5af" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ExamenJoseMoreno30Nov.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/modelo/DadoEj7.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej4.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej5.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/Ej6.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/com/corenetworks/presentacion/PruebaEj7.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
@@ -23,9 +49,86 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "git-widget-placeholder": "master"
   }
 }]]></component>
+  <component name="RunManager" selected="Application.PruebaEj7">
+    <configuration name="Ej3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.corenetworks.presentacion.Ej3" />
+      <module name="ExamenJoseMoreno30Nov" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.corenetworks.presentacion.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Ej4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.corenetworks.presentacion.Ej4" />
+      <module name="ExamenJoseMoreno30Nov" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.corenetworks.presentacion.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Ej5" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.corenetworks.presentacion.Ej5" />
+      <module name="ExamenJoseMoreno30Nov" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.corenetworks.presentacion.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Ej6" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.corenetworks.presentacion.Ej6" />
+      <module name="ExamenJoseMoreno30Nov" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.corenetworks.presentacion.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="PruebaEj7" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.corenetworks.presentacion.PruebaEj7" />
+      <module name="ExamenJoseMoreno30Nov" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.corenetworks.presentacion.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.PruebaEj7" />
+        <item itemvalue="Application.Ej4" />
+        <item itemvalue="Application.Ej3" />
+        <item itemvalue="Application.Ej6" />
+        <item itemvalue="Application.Ej5" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
Index: src/com/corenetworks/presentacion/Ej6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.corenetworks.presentacion;public class Ej6 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/corenetworks/presentacion/Ej6.java b/src/com/corenetworks/presentacion/Ej6.java
--- a/src/com/corenetworks/presentacion/Ej6.java	(revision d92ffd8f44c1bee802ba65afcd2ea6aa31683513)
+++ b/src/com/corenetworks/presentacion/Ej6.java	(date 1701356991069)
@@ -1,2 +1,23 @@
-package com.corenetworks.presentacion;public class Ej6 {
+package com.corenetworks.presentacion;
+
+import java.time.LocalDate;
+import java.time.Month;
+import java.time.Period;
+
+public class Ej6 {
+    public static void main(String[] args) {
+        LocalDate fechaNacimiento = LocalDate.of(1993, 8, 30);
+        LocalDate fechaActual = LocalDate.now();
+        Period periodo = Period.between(fechaNacimiento, fechaActual);
+        int edad = periodo.getYears();
+        System.out.println("Edad: " + edad + " a침os");
+        LocalDate fechaHoy= LocalDate.now();
+        System.out.println("Fecha de hoy: " + fechaHoy);
+        LocalDate fechaIniciCurso = LocalDate.of(2023, Month.OCTOBER, 9);
+        LocalDate nuevaFecha = fechaIniciCurso.plusMonths(2);
+        System.out.println("Fecha despu칠s de sumar 2 meses: " + nuevaFecha);
+
+
+
+    }
 }
